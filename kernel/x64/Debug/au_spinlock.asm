; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	au_create_spinlock
PUBLIC	au_remove_spinlock
PUBLIC	au_acquire_spinlock
PUBLIC	au_free_spinlock
EXTRN	kmalloc:PROC
EXTRN	kfree:PROC
pdata	SEGMENT
$pdata$au_create_spinlock DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$au_create_spinlock
$pdata$au_remove_spinlock DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$au_remove_spinlock
pdata	ENDS
xdata	SEGMENT
$unwind$au_create_spinlock DD 010401H
	DD	06204H
$unwind$au_remove_spinlock DD 010901H
	DD	04209H
xdata	ENDS
; Function compile flags: /Odtpy
; File e:\aurora kernel\kernel\atomic\au_spinlock.cpp
_TEXT	SEGMENT
spinlock$ = 8
au_free_spinlock PROC

; 74   : void au_free_spinlock(au_spinlock_t* spinlock) {

	mov	QWORD PTR [rsp+8], rcx

; 75   : #ifdef SMP
; 76   : 	if (spinlock->value > 1){ //corrupted spinlock
; 77   : 		spinlock->set_by_cpu = 0; // per_cpu_get_cpu_id();
; 78   : 		spinlock->value = 0;
; 79   : 		return;
; 80   : 	}
; 81   : 
; 82   : 	spinlock->set_by_cpu = 0; // per_cpu_get_cpu_id();
; 83   : 	spinlock->value = 0;
; 84   : #else
; 85   : 	return;
; 86   : #endif
; 87   : 
; 88   : }

	ret	0
au_free_spinlock ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\aurora kernel\kernel\atomic\au_spinlock.cpp
_TEXT	SEGMENT
spinlock$ = 8
au_acquire_spinlock PROC

; 59   : void au_acquire_spinlock(au_spinlock_t *spinlock) {

	mov	QWORD PTR [rsp+8], rcx

; 60   : #ifdef SMP
; 61   : 	if (spinlock->value > 1)
; 62   : 		spinlock->value = 0;
; 63   : 	x64_lock_acquire(&spinlock->value);
; 64   : 	spinlock->set_by_cpu = 0; // per_cpu_get_cpu_id();
; 65   : #else
; 66   : 	return;
; 67   : #endif
; 68   : }

	ret	0
au_acquire_spinlock ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\aurora kernel\kernel\atomic\au_spinlock.cpp
_TEXT	SEGMENT
spinlock$ = 48
au_remove_spinlock PROC

; 51   : void au_remove_spinlock(au_spinlock_t* spinlock) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 52   : 	kfree(spinlock);

	mov	rcx, QWORD PTR spinlock$[rsp]
	call	kfree

; 53   : }

	add	rsp, 40					; 00000028H
	ret	0
au_remove_spinlock ENDP
_TEXT	ENDS
; Function compile flags: /Odtpy
; File e:\aurora kernel\kernel\atomic\au_spinlock.cpp
_TEXT	SEGMENT
spinlock$ = 32
au_create_spinlock PROC

; 40   : au_spinlock_t * au_create_spinlock() {

$LN3:
	sub	rsp, 56					; 00000038H

; 41   : 	au_spinlock_t *spinlock = (au_spinlock_t*)kmalloc(sizeof(au_spinlock_t));

	mov	ecx, 16
	call	kmalloc
	mov	QWORD PTR spinlock$[rsp], rax

; 42   : 	spinlock->value = 0;

	mov	rax, QWORD PTR spinlock$[rsp]
	mov	QWORD PTR [rax], 0

; 43   : 	spinlock->set_by_cpu = 0;

	mov	rax, QWORD PTR spinlock$[rsp]
	mov	BYTE PTR [rax+8], 0

; 44   : 	return spinlock;

	mov	rax, QWORD PTR spinlock$[rsp]

; 45   : }

	add	rsp, 56					; 00000038H
	ret	0
au_create_spinlock ENDP
_TEXT	ENDS
END
